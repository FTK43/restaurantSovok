(()=>{var n={426:(n,e,t)=>{"use strict";t.d(e,{Z:()=>h});var o=t(15),r=t.n(o),i=t(645),a=t.n(i),c=t(667),s=t.n(c),d=t(85),A=t(774),l=t(820),u=t(26),p=a()(r()),m=s()(d.Z),f=s()(A),g=s()(l),B=s()(u);p.push([n.id,"body {\n    background-size: 100vw 100vh;\n    background-image: url("+m+");\n}\n\nheader {\n    top: 0;\n    height: 5vh;\n    display: flex;\n    justify-content: center;\n    position: absolute;\n    left: 0;\n    width: 100%;\n    background-color: chocolate;\n    color: white;\n    align-items: center;\n}\n\nfooter {\n    bottom: 0;\n    height: 8vh;\n    display: flex;\n    justify-content: space-around;\n    position: fixed;\n    width: 100%;\n    background-color: chocolate;\n    color: white;\n    left: 0;\n    align-items: self-end;\n    border-top: 4px double coral;\n}\n\nbutton {\n    background-color: red;\n    color: yellow;\n    font-family: SovietFont3;\n}\n\nh1 {\n    background: red;\n    color: yellow;\n    border: 5px solid black;\n    border-radius: 20%;\n    width: 60vw;\n    justify-content: center;\n    display: flex;\n    padding: 1em;\n    font-family: SovietFont;\n}\n\n#main {\n    margin-left: 25%;\n    margin-right: 25%;\n    height: 40vh;\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n    margin-top: 4vw;\n}\n\np {\n    background: red;\n    color: yellow;\n    border: 3px solid black;\n    border-radius: 15%;\n    width: 40%;\n    align-self: center;\n    justify-self: center;\n    padding-top: 15vh;\n    padding-bottom: 15vh;\n    line-break: strict;\n    text-align: center;\n    font-family: SovietFont3;\n    font-size: smaller;\n}\n\np#about {\n    margin-right: 20px;\n}\n\ninput + label {             /* box with rounded corner */\n    border: 1px solid #999;\n    background: #EEE;\n    padding: 4px 12px;\n    border-radius: 4px 4px 0 0;\n    position: relative;\n    top: 1px;\n  }\n  input:checked + label {     /* white background for selected tab */\n    background: #FFF;\n    border-bottom: 1px solid transparent;\n  }\n  input ~ .tab {          /* grey line between tab and contents */\n    border-top: 1px solid #999;\n    padding: 12px;\n  }\n\ninput { display: none; }                /* hide radio buttons */\ninput + label { display: inline-block } /* show labels in line */\ninput ~ .tab { display: none }\n\nnav {\n    display: flex;\n}\n\nnav {\n    color: black;\n}\n\n.course {\n    display: flex;\n    justify-content: space-around;\n    flex-direction: row;\n    flex-wrap: wrap;\n    background: red;\n    color: yellow;\n    padding-bottom: 2%;\n    border-radius: 2%;\n    font-family: SovietFont;\n    font-size: medium;\n    padding-top: 5px;\n    margin-bottom: 20px;\n}\n\n#managers {\n    display: flex;\n    justify-content: center;\n    flex-direction: row;\n    background: red;\n    color: yellow;\n    padding-bottom: 2%;\n    border-radius: 10%;\n    font-family: SovietFont2;\n    font-size: medium;\n    padding-top: 5px;\n    margin-bottom: 20px;\n}\n\n#career {\n    display: flex;\n    justify-content: center;\n    flex-direction: row;\n    background: red;\n    color: yellow;\n    padding-bottom: 2%;\n    border-radius: 10%;\n    font-family: SovietFont2;\n    font-size: medium;\n    padding-top: 5px;\n    margin-bottom: 20px;\n    padding: 5vh;\n}\n\n.manager {\n    margin: 25px;\n}\n\n\n#drinks {\n    margin-bottom: 100px;\n}\n\n.dish{\n    justify-content: center;\n    display: flex;\n}\n\n.dishPic{\n    border: 1px solid black;\n}\n\nspan {\n    justify-content: center;\n    display: flex;\n    width: 100%;\n    margin-bottom: 20px;\n    color: yellow;\n    font-family: SovietFont;\n    font-size: 1.8rem;\n    flex-wrap: wrap;\n}\n\n@font-face {\n    font-family: 'SovietFont'; /*a name to be used later*/\n    src: url("+f+");\n}\n\n@font-face{\n    font-family: 'SovietFont2';\n    src: url("+g+");\n}\n\n@font-face{\n    font-family: 'SovietFont3';\n    src: url("+B+");\n}\n\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,4BAA4B;IAC5B,yDAAyC;AAC7C;;AAEA;IACI,MAAM;IACN,WAAW;IACX,aAAa;IACb,uBAAuB;IACvB,kBAAkB;IAClB,OAAO;IACP,WAAW;IACX,2BAA2B;IAC3B,YAAY;IACZ,mBAAmB;AACvB;;AAEA;IACI,SAAS;IACT,WAAW;IACX,aAAa;IACb,6BAA6B;IAC7B,eAAe;IACf,WAAW;IACX,2BAA2B;IAC3B,YAAY;IACZ,OAAO;IACP,qBAAqB;IACrB,4BAA4B;AAChC;;AAEA;IACI,qBAAqB;IACrB,aAAa;IACb,wBAAwB;AAC5B;;AAEA;IACI,eAAe;IACf,aAAa;IACb,uBAAuB;IACvB,kBAAkB;IAClB,WAAW;IACX,uBAAuB;IACvB,aAAa;IACb,YAAY;IACZ,uBAAuB;AAC3B;;AAEA;IACI,gBAAgB;IAChB,iBAAiB;IACjB,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,eAAe;IACf,eAAe;AACnB;;AAEA;IACI,eAAe;IACf,aAAa;IACb,uBAAuB;IACvB,kBAAkB;IAClB,UAAU;IACV,kBAAkB;IAClB,oBAAoB;IACpB,iBAAiB;IACjB,oBAAoB;IACpB,kBAAkB;IAClB,kBAAkB;IAClB,wBAAwB;IACxB,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;AACtB;;AAEA,4BAA4B,4BAA4B;IACpD,sBAAsB;IACtB,gBAAgB;IAChB,iBAAiB;IACjB,0BAA0B;IAC1B,kBAAkB;IAClB,QAAQ;EACV;EACA,4BAA4B,sCAAsC;IAChE,gBAAgB;IAChB,oCAAoC;EACtC;EACA,wBAAwB,uCAAuC;IAC7D,0BAA0B;IAC1B,aAAa;EACf;;AAEF,QAAQ,aAAa,EAAE,iBAAiB,uBAAuB;AAC/D,gBAAgB,sBAAsB,EAAE,wBAAwB;AAChE,eAAe,cAAc;;AAE7B;IACI,aAAa;AACjB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,6BAA6B;IAC7B,mBAAmB;IACnB,eAAe;IACf,eAAe;IACf,aAAa;IACb,kBAAkB;IAClB,iBAAiB;IACjB,uBAAuB;IACvB,iBAAiB;IACjB,gBAAgB;IAChB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,eAAe;IACf,aAAa;IACb,kBAAkB;IAClB,kBAAkB;IAClB,wBAAwB;IACxB,iBAAiB;IACjB,gBAAgB;IAChB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,eAAe;IACf,aAAa;IACb,kBAAkB;IAClB,kBAAkB;IAClB,wBAAwB;IACxB,iBAAiB;IACjB,gBAAgB;IAChB,mBAAmB;IACnB,YAAY;AAChB;;AAEA;IACI,YAAY;AAChB;;;AAGA;IACI,oBAAoB;AACxB;;AAEA;IACI,uBAAuB;IACvB,aAAa;AACjB;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,uBAAuB;IACvB,aAAa;IACb,WAAW;IACX,mBAAmB;IACnB,aAAa;IACb,uBAAuB;IACvB,iBAAiB;IACjB,eAAe;AACnB;;AAEA;IACI,yBAAyB,EAAE,0BAA0B;IACrD,4CAA0B;AAC9B;;AAEA;IACI,0BAA0B;IAC1B,4CAA4B;AAChC;;AAEA;IACI,0BAA0B;IAC1B,4CAAkC;AACtC",sourcesContent:["body {\n    background-size: 100vw 100vh;\n    background-image: url('./restaraunt.jpg');\n}\n\nheader {\n    top: 0;\n    height: 5vh;\n    display: flex;\n    justify-content: center;\n    position: absolute;\n    left: 0;\n    width: 100%;\n    background-color: chocolate;\n    color: white;\n    align-items: center;\n}\n\nfooter {\n    bottom: 0;\n    height: 8vh;\n    display: flex;\n    justify-content: space-around;\n    position: fixed;\n    width: 100%;\n    background-color: chocolate;\n    color: white;\n    left: 0;\n    align-items: self-end;\n    border-top: 4px double coral;\n}\n\nbutton {\n    background-color: red;\n    color: yellow;\n    font-family: SovietFont3;\n}\n\nh1 {\n    background: red;\n    color: yellow;\n    border: 5px solid black;\n    border-radius: 20%;\n    width: 60vw;\n    justify-content: center;\n    display: flex;\n    padding: 1em;\n    font-family: SovietFont;\n}\n\n#main {\n    margin-left: 25%;\n    margin-right: 25%;\n    height: 40vh;\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n    margin-top: 4vw;\n}\n\np {\n    background: red;\n    color: yellow;\n    border: 3px solid black;\n    border-radius: 15%;\n    width: 40%;\n    align-self: center;\n    justify-self: center;\n    padding-top: 15vh;\n    padding-bottom: 15vh;\n    line-break: strict;\n    text-align: center;\n    font-family: SovietFont3;\n    font-size: smaller;\n}\n\np#about {\n    margin-right: 20px;\n}\n\ninput + label {             /* box with rounded corner */\n    border: 1px solid #999;\n    background: #EEE;\n    padding: 4px 12px;\n    border-radius: 4px 4px 0 0;\n    position: relative;\n    top: 1px;\n  }\n  input:checked + label {     /* white background for selected tab */\n    background: #FFF;\n    border-bottom: 1px solid transparent;\n  }\n  input ~ .tab {          /* grey line between tab and contents */\n    border-top: 1px solid #999;\n    padding: 12px;\n  }\n\ninput { display: none; }                /* hide radio buttons */\ninput + label { display: inline-block } /* show labels in line */\ninput ~ .tab { display: none }\n\nnav {\n    display: flex;\n}\n\nnav {\n    color: black;\n}\n\n.course {\n    display: flex;\n    justify-content: space-around;\n    flex-direction: row;\n    flex-wrap: wrap;\n    background: red;\n    color: yellow;\n    padding-bottom: 2%;\n    border-radius: 2%;\n    font-family: SovietFont;\n    font-size: medium;\n    padding-top: 5px;\n    margin-bottom: 20px;\n}\n\n#managers {\n    display: flex;\n    justify-content: center;\n    flex-direction: row;\n    background: red;\n    color: yellow;\n    padding-bottom: 2%;\n    border-radius: 10%;\n    font-family: SovietFont2;\n    font-size: medium;\n    padding-top: 5px;\n    margin-bottom: 20px;\n}\n\n#career {\n    display: flex;\n    justify-content: center;\n    flex-direction: row;\n    background: red;\n    color: yellow;\n    padding-bottom: 2%;\n    border-radius: 10%;\n    font-family: SovietFont2;\n    font-size: medium;\n    padding-top: 5px;\n    margin-bottom: 20px;\n    padding: 5vh;\n}\n\n.manager {\n    margin: 25px;\n}\n\n\n#drinks {\n    margin-bottom: 100px;\n}\n\n.dish{\n    justify-content: center;\n    display: flex;\n}\n\n.dishPic{\n    border: 1px solid black;\n}\n\nspan {\n    justify-content: center;\n    display: flex;\n    width: 100%;\n    margin-bottom: 20px;\n    color: yellow;\n    font-family: SovietFont;\n    font-size: 1.8rem;\n    flex-wrap: wrap;\n}\n\n@font-face {\n    font-family: 'SovietFont'; /*a name to be used later*/\n    src: url('propaganda.ttf');\n}\n\n@font-face{\n    font-family: 'SovietFont2';\n    src: url('Red\\ October.ttf');\n}\n\n@font-face{\n    font-family: 'SovietFont3';\n    src: url('Red\\ October-Light.ttf');\n}\n\n"],sourceRoot:""}]);const h=p},645:n=>{"use strict";n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t=n(e);return e[2]?"@media ".concat(e[2]," {").concat(t,"}"):t})).join("")},e.i=function(n,t,o){"string"==typeof n&&(n=[[null,n,""]]);var r={};if(o)for(var i=0;i<this.length;i++){var a=this[i][0];null!=a&&(r[a]=!0)}for(var c=0;c<n.length;c++){var s=[].concat(n[c]);o&&r[s[0]]||(t&&(s[2]?s[2]="".concat(t," and ").concat(s[2]):s[2]=t),e.push(s))}},e}},15:n=>{"use strict";function e(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,o=new Array(e);t<e;t++)o[t]=n[t];return o}n.exports=function(n){var t,o,r=(o=4,function(n){if(Array.isArray(n))return n}(t=n)||function(n,e){var t=n&&("undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"]);if(null!=t){var o,r,i=[],a=!0,c=!1;try{for(t=t.call(n);!(a=(o=t.next()).done)&&(i.push(o.value),!e||i.length!==e);a=!0);}catch(n){c=!0,r=n}finally{try{a||null==t.return||t.return()}finally{if(c)throw r}}return i}}(t,o)||function(n,t){if(n){if("string"==typeof n)return e(n,t);var o=Object.prototype.toString.call(n).slice(8,-1);return"Object"===o&&n.constructor&&(o=n.constructor.name),"Map"===o||"Set"===o?Array.from(n):"Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)?e(n,t):void 0}}(t,o)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=r[1],a=r[3];if("function"==typeof btoa){var c=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(c),d="/*# ".concat(s," */"),A=a.sources.map((function(n){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(n," */")}));return[i].concat(A).concat([d]).join("\n")}return[i].join("\n")}},667:n=>{"use strict";n.exports=function(n,e){return e||(e={}),"string"!=typeof(n=n&&n.__esModule?n.default:n)?n:(/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n)}},269:(n,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>o});const o=t.p+"images/src/contacts/dmitry.jpeg"},573:(n,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>o});const o=t.p+"images/src/contacts/tatyana.jpeg"},668:(n,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>o});const o=t.p+"images/src/menu/borshcht.jpeg"},798:(n,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>o});const o=t.p+"images/src/menu/grechka.jpeg"},332:(n,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>o});const o=t.p+"images/src/menu/kharcho.jpeg"},944:(n,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>o});const o=t.p+"images/src/menu/kompot.jpeg"},416:(n,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>o});const o=t.p+"images/src/menu/pancakes.jpeg"},522:(n,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>o});const o=t.p+"images/src/menu/perlovka.jpeg"},175:(n,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>o});const o=t.p+"images/src/menu/pierogi1.jpeg"},307:(n,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>o});const o=t.p+"images/src/menu/pierogi2.jpeg"},195:(n,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>o});const o=t.p+"images/src/menu/rozhki.jpeg"},632:(n,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>o});const o=t.p+"images/src/menu/shchi.jpeg"},723:(n,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>o});const o=t.p+"images/src/menu/tea.jpeg"},829:(n,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>o});const o=t.p+"images/src/menu/vodka.jpeg"},85:(n,e,t)=>{"use strict";t.d(e,{Z:()=>o});const o=t.p+"images/src/restaraunt.jpeg"},379:(n,e,t)=>{"use strict";var o,r=function(){var n={};return function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}n[e]=t}return n[e]}}(),i=[];function a(n){for(var e=-1,t=0;t<i.length;t++)if(i[t].identifier===n){e=t;break}return e}function c(n,e){for(var t={},o=[],r=0;r<n.length;r++){var c=n[r],s=e.base?c[0]+e.base:c[0],d=t[s]||0,A="".concat(s," ").concat(d);t[s]=d+1;var l=a(A),u={css:c[1],media:c[2],sourceMap:c[3]};-1!==l?(i[l].references++,i[l].updater(u)):i.push({identifier:A,updater:f(u,e),references:1}),o.push(A)}return o}function s(n){var e=document.createElement("style"),o=n.attributes||{};if(void 0===o.nonce){var i=t.nc;i&&(o.nonce=i)}if(Object.keys(o).forEach((function(n){e.setAttribute(n,o[n])})),"function"==typeof n.insert)n.insert(e);else{var a=r(n.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(e)}return e}var d,A=(d=[],function(n,e){return d[n]=e,d.filter(Boolean).join("\n")});function l(n,e,t,o){var r=t?"":o.media?"@media ".concat(o.media," {").concat(o.css,"}"):o.css;if(n.styleSheet)n.styleSheet.cssText=A(e,r);else{var i=document.createTextNode(r),a=n.childNodes;a[e]&&n.removeChild(a[e]),a.length?n.insertBefore(i,a[e]):n.appendChild(i)}}function u(n,e,t){var o=t.css,r=t.media,i=t.sourceMap;if(r?n.setAttribute("media",r):n.removeAttribute("media"),i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleSheet)n.styleSheet.cssText=o;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(o))}}var p=null,m=0;function f(n,e){var t,o,r;if(e.singleton){var i=m++;t=p||(p=s(e)),o=l.bind(null,t,i,!1),r=l.bind(null,t,i,!0)}else t=s(e),o=u.bind(null,t,e),r=function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)};return o(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;o(n=e)}else r()}}n.exports=function(n,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=(void 0===o&&(o=Boolean(window&&document&&document.all&&!window.atob)),o));var t=c(n=n||[],e);return function(n){if(n=n||[],"[object Array]"===Object.prototype.toString.call(n)){for(var o=0;o<t.length;o++){var r=a(t[o]);i[r].references--}for(var s=c(n,e),d=0;d<t.length;d++){var A=a(t[d]);0===i[A].references&&(i[A].updater(),i.splice(A,1))}t=s}}}},26:(n,e,t)=>{"use strict";n.exports=t.p+"3f7e34ddf8edf13847d7.ttf"},820:(n,e,t)=>{"use strict";n.exports=t.p+"ae6eb4d23dd419c53fbe.ttf"},422:(n,e,t)=>{var o={"./dmitry.jpg":269,"./tatyana.jpg":573};function r(n){var e=i(n);return t(e)}function i(n){if(!t.o(o,n)){var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}return o[n]}r.keys=function(){return Object.keys(o)},r.resolve=i,n.exports=r,r.id=422},740:(n,e,t)=>{var o={"./borshcht.jpg":668,"./grechka.jpg":798,"./kharcho.jpg":332,"./kompot.jpg":944,"./pancakes.jpg":416,"./perlovka.jpg":522,"./pierogi1.jpg":175,"./pierogi2.jpg":307,"./rozhki.jpg":195,"./shchi.jpg":632,"./tea.jpg":723,"./vodka.jpg":829};function r(n){var e=i(n);return t(e)}function i(n){if(!t.o(o,n)){var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}return o[n]}r.keys=function(){return Object.keys(o)},r.resolve=i,n.exports=r,r.id=740},774:(n,e,t)=>{"use strict";n.exports=t.p+"4e9adf4c942e9cb03b14.ttf"}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),(()=>{"use strict";function n(n){const e=document.createElement("button");return e.name="tabs",e.id=n,e.innerHTML=n,e}const e=function(){const e=document.getElementById("content");document.body.contains(document.getElementById("main"))||(e.appendChild(function(){const e=document.createElement("header");e.classList.add("header");const t=document.createElement("nav");return t.classList.add("nav"),t.appendChild(n("Homepage")),t.appendChild(n("Menu")),t.appendChild(n("Contacts")),e.appendChild(t),e}()),e.appendChild(function(){const n=document.createElement("footer"),e=document.createElement("span"),t=document.createElement("span"),o=document.createElement("span");return e.innerHTML="0.0.1",t.innerHTML="(c) FTK records",o.innerHTML=function(){let n=new Date;const e=String(n.getDate()).padStart(2,"0"),t=String(n.getMonth()+1).padStart(2,"0"),o=n.getFullYear();return n=e+"/"+t+"/"+o,console.log(n),n.toString()}(),n.appendChild(e),n.appendChild(t),n.appendChild(o),n}())),e.appendChild(function(){let n;return document.body.contains(document.getElementById("main"))?(n=document.getElementById("main"),n.innerHTML=""):(n=document.createElement("div"),n.classList.add("div"),n.id="main"),n.appendChild(function(){const n=document.createElement("h1");return n.classList.add("h1"),n.innerHTML="☭ Welcome to our restaurant ☭",n}()),n.appendChild(function(){const n=document.createElement("p");return n.classList.add("p"),n.id="about",n.innerHTML="Sovok restaurant is simply the best! <br> <br>We offer everything that you need to feel nostalgic about the late great Soviet Union. <br> <br>And if you don't know what it was like, <br>you surely will now! <br> <br>Thanks for the visit, hope you like it and see you soon!",n}()),n.appendChild(function(){const n=document.createElement("p");return n.id="address",n.innerHTML="Our restaurant is located on <br>127001, Soviet Union, Year 1982, <br>Planet Earth, Soviet Universe",n}()),n}())};function o(n){const e=document.createElement("img");return e.src=n,e.alt="a picture of "+n.replace("./","").replace(".jpg",""),e}!function(n){let e={};n.keys().map(((t,o)=>{e[t.replace("./","")]=n(t)}))}(t(422));function r(n,e,t){const o=document.createElement("div");o.id=n,o.classList.add("course");const r=document.createElement("span");r.innerHTML=`Comrade, our choices for the ${e} are:`,o.appendChild(r);for(let n=0;n<3;n++)o.appendChild(i(t[n]));return o}function i(n){const e=document.createElement("div");e.id=n[0];const t=document.createElement("div");t.classList.add("dish"),t.innerHTML=n[0]+".<br> The price is: "+n[2]+"$!";const o=document.createElement("img");return o.src=n[1],o.alt="a picture of: "+n[0],o.classList.add("dishPic"),e.appendChild(t),e.appendChild(o),e}!function(n){let e={};n.keys().map(((t,o)=>{e[t.replace("./","")]=n(t)}))}(t(740));var a=t(379),c=t.n(a),s=t(426);c()(s.Z,{insert:"head",singleton:!1}),s.Z.locals,e(),document.getElementById("Homepage").addEventListener("click",e),document.getElementById("Menu").addEventListener("click",(function(){const n=document.getElementById("main");n.innerHTML="",n.appendChild(function(){const n=document.createElement("div");return n.id="menu",n.appendChild(r("firstCourse","the main Course",[["Borshcht","../dist/images/src/menu/borshcht.jpeg","3.50"],["Kharcho","../dist/images/src/menu/kharcho.jpeg","3.25"],["Shchi","../dist/images/src/menu/shchi.jpeg","3.00"]])),n.appendChild(r("secondCourse","the second Course",[["Grechka with sausages","../dist/images/src/menu/grechka.jpeg","1.50"],["Rozhki with chicken meat","../dist/images/src/menu/rozhki.jpeg","1.25"],["Perlovka with mushrooms","../dist/images/src/menu/perlovka.jpeg","0.75"]])),n.appendChild(r("desserts","desserts",[["Pirozhki sladkie (with jam)","../dist/images/src/menu/pierogi1.jpeg","1.00"],["Pirozhki (cabbage and potatoes)","../dist/images/src/menu/pierogi2.jpeg","0.80"],["Blini (pancakes)","../dist/images/src/menu/pancakes.jpeg","0.50"]])),n.appendChild(r("drinks","drinks",[["vodka","../dist/images/src/menu/vodka.jpeg","0.33"],["kompot (berry drink)","../dist/images/src/menu/kompot.jpeg","0.15"],["black tea","../dist/images/src/menu/tea.jpeg","0.05"]])),n}())})),document.getElementById("Contacts").addEventListener("click",(function(){const n=document.getElementById("main");n.innerHTML="",n.appendChild(function(){const n=document.createElement("div");return n.id="contacts",n.appendChild(function(){const n=document.createElement("div");n.id="managers";const e=document.createElement("div");e.classList.add("manager"),e.innerHTML="General Manager: Dmitry. <br> Phone: +7(000)000-00-00 <br>email: dmitry@sovok.su",e.appendChild(o("/dist/images/src/contacts/dmitry.jpeg"));const t=document.createElement("div");return t.classList.add("manager"),t.innerHTML="Head Chef: Tatyana. <br> Phone: +7(000)000-00-01 <br>email: tatyana@sovok.su",t.appendChild(o("/dist/images/src/contacts/tatyana.jpeg")),n.appendChild(e),n.appendChild(t),n}()),n.appendChild(function(){const n=document.createElement("div");return n.id="career",n.innerHTML="Sovok is a great place to work! <br>At the moment we have following openings: <br>Janitor, schedule: 3 working days/1 day off 9am-9pm, salary: 1000 per month <br>Dishwasher, schedule: 3 working date/ 1 day off 9am-9pm, salary: 950 per month <br>Contact our HR department at dmitry@sovok.su",n}()),n}())}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,